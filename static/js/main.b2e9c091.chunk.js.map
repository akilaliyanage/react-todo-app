{"version":3,"sources":["logo.svg","components/todo.jsx","components/todos.jsx","components/swap.jsx","components/AppBar.jsx","components/addItems.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Todo","state","cut","textDecoration","props","todo","status","marginLeft","style","FormControlLabel","label","control","Checkbox","value","onChange","this","click","bind","id","color","check","Typography","align","variant","Button","onClick","remove","button","Component","backgroundColor","padding","display","flexDirection","verticleAlign","float","Todos","console","log","todos","map","useStyles","makeStyles","list","width","fullList","SwipeableTemporaryDrawer","classes","React","useState","left","setState","toggleDrawer","anchor","open","event","type","key","Fragment","SwipeableDrawer","onClose","onOpen","className","clsx","role","onKeyDown","List","text","index","ListItem","ListItemIcon","ListItemText","primary","Divider","Appbar","AppBar","position","Toolbar","Badge","badgeContent","length","overlap","AddItems","title","change","e","target","name","onSubmit","preventDefault","alert","addItems","action","method","FormControl","formstyle","FormLabel","TextField","margin","App","del","newTask","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b2e9c091.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nclass Todo extends Component {\r\n    state = {}\r\n    \r\n    cut = () => {\r\n        return {\r\n            textDecoration: this.props.todo.status ? 'line-through' : 'none',\r\n            marginLeft:'10px'\r\n        };\r\n    }\r\n    render() { \r\n        return ( \r\n            <div style={style}>\r\n                <FormControlLabel\r\n                  label=\"\"\r\n                  control={\r\n                    <Checkbox\r\n                      value=\"\"\r\n                      onChange={this.props.click.bind(this, this.props.todo.id)}\r\n                          color=\"primary\"\r\n                          style={check}\r\n                    />\r\n                  }\r\n                />\r\n                <Typography align=\"justify\" variant=\"button\" color=\"primary\"><span style={this.cut()}>{this.props.todo.value}</span></Typography>\r\n                <Button onClick={this.props.remove.bind(this, this.props.todo.id)} style={button} variant=\"contained\" color=\"secondary\">\r\n                    X\r\n                </Button>\r\n                \r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nconst style = {\r\n    backgroundColor: '#e5e5e5',\r\n    color: 'black',\r\n    padding: '5px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    verticleAlign: 'middle',\r\n   // marginLeft:'10px'\r\n    //width: '100%',\r\n    //margin:'5px'\r\n}\r\n\r\nconst button = {\r\n    float: 'right',\r\n    marginLeft : 'auto'\r\n}\r\n\r\nconst check = {\r\n    marginLeft : '10px'\r\n}\r\n \r\nexport default Todo;","import React, { Component } from 'react';\r\nimport Todo from './todo';\r\n\r\nclass Todos extends Component {\r\n    state = {  }\r\n    render() { \r\n        console.log(this.props.todos)\r\n        return this.props.todos.map((todo) => (\r\n            <Todo todo={todo} click={this.props.click} remove={this.props.remove}/>\r\n        ));\r\n    }\r\n}\r\n \r\nexport default Todos;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n});\r\n\r\nexport default function SwipeableTemporaryDrawer() {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n      \r\n        left: false\r\n        \r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const list = (anchor) => (\r\n        <div\r\n            className={clsx(classes.list, {\r\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n            })}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {['left'].map((anchor) => (\r\n                <React.Fragment key={anchor}>\r\n                    <Button onClick={toggleDrawer(anchor, true)}>  <MenuIcon /></Button>\r\n                    <SwipeableDrawer\r\n                        anchor={anchor}\r\n                        open={state[anchor]}\r\n                        onClose={toggleDrawer(anchor, false)}\r\n                        onOpen={toggleDrawer(anchor, true)}\r\n                    >\r\n                        {list(anchor)}\r\n                    </SwipeableDrawer>\r\n                </React.Fragment>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport SwipeableTemporaryDrawer from './swap';\r\n\r\n\r\nclass Appbar extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <AppBar position=\"sticky\" color=\"secondary\">\r\n                    <Toolbar>\r\n                        <SwipeableTemporaryDrawer />\r\n                    <Typography variant=\"h6\">\r\n                            To Do creator : {'  '}\r\n                            <Badge badgeContent={this.props.length} color=\"primary\" overlap=\"rectangle\">\r\n                                 Total actions\r\n                            </Badge>\r\n                    </Typography>\r\n                  </Toolbar>\r\n                </AppBar>\r\n           </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Appbar;","import React, { Component } from 'react'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport FormLabel from '@material-ui/core/FormLabel'\r\nimport { FormControl, TextField, Button } from '@material-ui/core';\r\n\r\n\r\nclass AddItems extends Component {\r\n    state = { \r\n        title:''\r\n    }\r\n    \r\n    change = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        \r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.title === '') {\r\n            alert('⚠ Empty field, Insert a valid action ⚠');\r\n        }\r\n        else {\r\n            this.props.addItems(this.state.title);\r\n            this.state.title = '';\r\n        }\r\n       \r\n    }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <form action=\"\" method=\"get\" onSubmit={this.onSubmit}>\r\n                    <FormControl style={formstyle} action=\"akila.css\">\r\n                        <FormLabel>You can add items here : </FormLabel>\r\n\r\n                        <TextField\r\n                            id=\"\"\r\n                            label=\"\"\r\n                            name=\"title\"\r\n                           onChange={this.change}\r\n                            value={this.state.title}\r\n                            margin=\"dense\"\r\n\r\n                        />\r\n                        <Button variant=\"text\" color=\"default\" type=\"submit\" variant=\"contained\">\r\n                            Submit\r\n                    </Button>\r\n                    </FormControl>\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nconst formstyle = {\r\n    //disply: 'flex',\r\n    //flexDirection: 'row',\r\n    padding: '10px',\r\n    marginLeft: '10px',\r\n}\r\n \r\nexport default AddItems;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Todo from './components/todo';\nimport Todos from './components/todos';\nimport Appbar from './components/AppBar';\nimport AddItems from './components/addItems';\n\nclass App extends Component{\n  state = {\n    todo: [\n      {\n        id: 1,\n        value: 'go home',\n        status:false\n      },\n      {\n        id: 2,\n        value: 'go to school',\n        status: false\n      },\n      {\n        id: 3,\n        value: 'go shopping',\n        status: false\n      }\n    ]\n  };\n\n  del = (id) => {\n    console.log(id);\n    this.setState(\n      {\n        todo: this.state.todo.map(todo => { \n          if (todo.id === id) {\n            todo.status = !todo.status\n            \n          }\n          return todo;\n      })}\n    );\n  }\n\n  addItems = (title) => {\n    console.log(title);\n    const newTask = {\n      id: this.state.todo.length + 1,\n      value: title,\n      status: false\n    }\n    this.setState({todo : [...this.state.todo,newTask]});\n  }\n\n  remove = (id) => {\n    console.log(id);\n    this.setState({todo : [...this.state.todo.filter(todo => todo.id !== id)]});\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Appbar length={this.state.todo.length} />\n        <AddItems addItems={this.addItems}/>\n        <Todos remove={this.remove} todos={this.state.todo} click={this.del}/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}